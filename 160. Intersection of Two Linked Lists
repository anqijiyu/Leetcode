#有两个链表，用长的链表减短的链表，LA-LB=N，从长的第N个节点开始和短的比
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        if headA is None or headB is None:
            return None
        curA,curB=headA,headB
        la,lb=0,0
        while curA:
            la+=1
            curA=curA.next
        while curB:
            lb+=1
            curB=curB.next
        curA,curB=headA,headB
        if la>lb:
            while la>lb:
                curA=curA.next
                la-=1
        elif la<lb:
            while la<lb:
                curB=curB.next
                lb-=1
        while curA!=curB:
            curA=curA.next
            curB=curB.next
        return curA
            

class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """

        # 基本字符： 　　I、V、X、L、C、D、M
        # 相应的阿拉伯数字表示为：
        # 1．5、10、50、100、500、1000
        # (1)相同的数字连写，所表示的数等于这些数字相加得到的数，如：Ⅲ = 3；
        # (2)小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数， 如：Ⅷ = 8；Ⅻ = 12；
        # (3)小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数，如：Ⅳ= 4；Ⅸ= 9；

        # 思路如下：
        # 从左边第一个数字开始，依次加，因为有（3）的情况的存在， 加过以后判断，要是存在（3）的情况，就减去前一个（i-1）*2，因为本来应该减去前面这个小的数， 但是上次一循环还加了一次，于是这次就减去2次
        d = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        ans = 0
        l = len(s)
        i = 0
        while i < l:
            if i > 0 and d[s[i]] > d[s[i - 1]]:
                ans += d[s[i]] - 2 * d[s[i - 1]]
            else:
                ans += d[s[i]]
            i += 1
        return ans
    
        #如果前一个大于等于后一个，就加上，否则就减去
        ans=0
        dic={"I":1,"V":5,"X":10,"L":50,"C":100,"D":500,"M":1000}
        for i in range(len(s)-1):
            if dic[s[i]]>=dic[s[i+1]]:
                ans+=dic[s[i]]
            else:
                ans-=dic[s[i]]
        ans+=dic[s[len(s)-1]]
        return ans
